{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nexport default async function getImagesByQuery(query, page) {\n    // Ця функція повинна приймати два параметри query (пошукове слово, яке є рядком) та page (номер сторінки, яка є числом), здійснювати HTTP-запит і повертати значення властивості data з отриманої відповіді.\n    try {\n        axios.defaults.baseURL = 'https://pixabay.com/api/';\n        const response = await axios.get('', {\n            params: {\n                per_page: 15,\n                page: 1,\n                key: '50295834-c918df4fa87d72bde5e1e5104',\n                q: query,\n                image_type: 'photo',\n                orientation: 'horizontal',\n                safesearch: true\n            }\n        });\n        const data = response.data;\n        console.log(data);\n        return data;\n    } catch (error) {\n        console.log(error, response.status);\n        \n    }\n}","import SimpleLightbox from \"simplelightbox\";\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nconst galleryLib = new SimpleLightbox('.gallery a', {\n    captionsData: 'alt',\n    captionDelay: 250,\n});\n\nconst galleryList = document.querySelector('.gallery');\n\n\nexport default function createGallery(images) {\n    // Ця функція повинна приймати масив images, створювати HTML - розмітку для галереї, додавати її в контейнер галереї та викликати метод екземпляра SimpleLightbox refresh().Нічого не повертає.\n  const markup = images\n    .map(image => {\n       const keysToShow = ['likes', 'views', 'comments', 'downloads'];\n       const infoMarkup = keysToShow\n        .map(key =>`<p class=\"info-item\">${capitalizeFirstLetter(key)}:<span class=\"info\">${image[key]}</span></p>`)\n        .join('');\n      return `<li class=\"image-item\">\n    <a href=\"${image.largeImageURL}\" title=\"${image.tags}\">\n    <img src=\"${image.webformatURL}\" \n    alt=\"${image.tags}\"\n    />\n    </a>\n    <div class=\"gallery-info\">\n    ${infoMarkup}\n    </div>\n    </li>`;\n    })\n    .join('');\n  galleryList.insertAdjacentHTML('beforeend', markup);\n  galleryLib.refresh();\n}\n\nfunction capitalizeFirstLetter(string){\n    if(!string){\n        return string\n    }\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\nfunction clearGallery() {\n    // Ця функція нічого не приймає та повинна очищати вміст контейнера галереї. Нічого не повертає.\n}\nfunction showLoader() {\n    // Ця функція нічого не приймає, повинна додавати клас для відображення лоадера. Нічого не повертає.\n}\nfunction hideLoader() {\n    // Ця функція нічого не приймає, повинна прибирати клас для відображення лоадера. Нічого не повертає.\n}\nfunction showLoadMoreButton() {\n    // Ця функція нічого не приймає, повинна додавати клас для відображення кнопки Load more. Нічого не повертає.\n}\nfunction hideLoadMoreButton() {\n    // Ця функція нічого не приймає, повинна прибирати клас для відображення кнопки Load more. Нічого не повертає.\n} ","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport getImagesByQuery from './js/pixabay-api';\nimport createGallery from './js/render-functions';\n\nconst formData = document.querySelector('.form');\nconst inputSearch = document.querySelector('input[name=\"search-text\"]');\nconst btnSubmit = document.querySelector('button[type=\"submit\"]');\nconst gallery = document.querySelector('.gallery');\n\ndocument.addEventListener('DOMContentLoaded', ()=> {\n    validateInput();\n});\n\nformData.addEventListener('submit', ev => {\n    ev.preventDefault();\n    if (validateInput()) {\n        getImagesByQuery(inputSearch.value);\n        console.log(inputSearch.value);\n// createGallery(data);\n    } else {\n        return iziToast.error({\n            title: 'Поле не може бути порожнім',\n            message: 'Будь ласка, введіть текст для пошуку.',\n            position: 'topRight',\n            timeout: 2000,\n        });\n    }\n});\n\ninputSearch.addEventListener('input', validateInput);\n\nfunction validateInput() {\n    if (inputSearch.value.trim() !== '') {\n        btnSubmit.disabled = false;\n        return true;\n    } else {\n        btnSubmit.disabled = true;\n        return false;\n    }\n}\n"],"names":["getImagesByQuery","query","page","axios","data","error","SimpleLightbox","formData","inputSearch","btnSubmit","validateInput","ev","iziToast"],"mappings":"owBAEe,eAAeA,EAAiBC,EAAOC,EAAM,CAExD,GAAI,CACAC,EAAM,SAAS,QAAU,2BAYzB,MAAMC,GAXW,MAAMD,EAAM,IAAI,GAAI,CACjC,OAAQ,CACJ,SAAU,GACV,KAAM,EACN,IAAK,qCACL,EAAGF,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACf,CACb,CAAS,GACqB,KACtB,eAAQ,IAAIG,CAAI,EACTA,CACV,OAAQC,EAAO,CACZ,QAAQ,IAAIA,EAAO,SAAS,MAAM,CAErC,CACL,CCtBmB,IAAIC,EAAe,aAAc,CAChD,aAAc,MACd,aAAc,GAClB,CAAC,EAEmB,SAAS,cAAc,UAAU,ECFrD,MAAMC,EAAW,SAAS,cAAc,OAAO,EACzCC,EAAc,SAAS,cAAc,2BAA2B,EAChEC,EAAY,SAAS,cAAc,uBAAuB,EAChD,SAAS,cAAc,UAAU,EAEjD,SAAS,iBAAiB,mBAAoB,IAAK,CAC/CC,GACJ,CAAC,EAEDH,EAAS,iBAAiB,SAAUI,GAAM,CAEtC,GADAA,EAAG,eAAc,EACbD,EAAa,EACbV,EAAiBQ,EAAY,KAAK,EAClC,QAAQ,IAAIA,EAAY,KAAK,MAG7B,QAAOI,EAAS,MAAM,CAClB,MAAO,6BACP,QAAS,wCACT,SAAU,WACV,QAAS,GACrB,CAAS,CAET,CAAC,EAEDJ,EAAY,iBAAiB,QAASE,CAAa,EAEnD,SAASA,GAAgB,CACrB,OAAIF,EAAY,MAAM,KAAI,IAAO,IAC7BC,EAAU,SAAW,GACd,KAEPA,EAAU,SAAW,GACd,GAEf"}